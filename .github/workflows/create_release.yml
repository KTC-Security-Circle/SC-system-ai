name: Create GitHub Release

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed

jobs:
  create_release:
    if: github.event.pull_request.merged == true && (github.event.pull_request.head.ref == 'release-updates-minor' || github.event.pull_request.head.ref == 'release-updates-major')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Get last release tag
      id: last_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        LAST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV

    - name: Get pull requests with specific label since last release
      id: pr_with_label
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PRS=$(gh pr list --label "bug" --label "documentation" --label "enhancement" --label "fix" --state merged --search "merged:>${{ steps.last_release.outputs.tag }}" --json title,url --jq '.[] | "- [\(.title)](\(.url))"')
        echo "PRS=$PRS" >> $GITHUB_ENV

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v$(poetry version --short)
        release_name: Release $(poetry version --short)
        draft: false
        prerelease: false
        body: |
          Release notes for version $(poetry version --short)
          
          Changes:
          ${{ env.PRS }}
